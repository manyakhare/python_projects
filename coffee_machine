from mr import MENU, resources

# TODO : 1. everything is gonna repeat until its input is off what would you like?(espresso/latte/cappuccino):
# TODO : 2. typing report will show us how much materials are left
# TODO : 3. function in which we'll add details of coffee type and accordingly subtract it from report and if not enough
#  material return sorry
# TODO : 4. please insert coin function of coin and give user its change if money is less then refund the money else say
#  here is your  _ enjoy
is_off = False
resources["cost"] = 0
MENU['espresso']['ingredients']['milk'] = 0
while not is_off:
    def coffee_details(users_choice):
        return MENU[users_choice]


    def is_resource_left():
        if MENU[user_choice]['ingredients']['water'] > resources['water']:
            print(f"sorry there is not enough water")
            return True
        else:
            return False


    def insert_coin(coin):
        no_of_coins = float(input(f"how many {coin}: "))
        if coin == "penny":
            return no_of_coins * 0.01
        elif coin == "nickel":
            return no_of_coins * 0.05
        elif coin == "dime":
            return no_of_coins * 0.10
        else:
            return no_of_coins * 0.25


    def total_amount():
        amount = insert_coin("penny") + insert_coin("nickel") + insert_coin("dime") + insert_coin("quarter")
        return round(amount, 2)


    def check_cost(user_choice):
        if MENU[user_choice]['cost'] < final_amount:
            cash_back = round(final_amount - MENU[user_choice]['cost'], 2)
            print(f"Here is {cash_back} in change")
            print(f"Here is your {user_choice} ☕☕. Enjoy!")
        else:
            print("Sorry that's not enough money. Money refunded")
            return True


    def resources_left():
        if cash or should_go_on:
            return resources
        else:
            resources["water"] -= MENU[user_choice]['ingredients']['water']
            resources["milk"] -= MENU[user_choice]['ingredients']['milk']
            resources["coffee"] -= MENU[user_choice]['ingredients']['coffee']
            resources["cost"] += MENU[user_choice]['cost']
            return resources


    user_choice = input(" What would you like to have? (espresso/latte/cappuccino): ")
    if user_choice == 'off':
        is_off = True
    elif user_choice == 'report':
        print(f"Water : {resources['water']}ml \nMilk : {resources['milk']}ml \nCoffee : {resources['coffee']}g "
              f"\nCost : ${resources['cost']}")
    else:
        materials = coffee_details(user_choice)
        should_go_on = is_resource_left()
        if not should_go_on:
            print("Please insert coin")
            final_amount = total_amount()
            cash = check_cost(user_choice)
        resources_left()


# def is_resource_sufficient(order_ingredients):
#     """Returns True when order can be made, False if ingredients are insufficient."""
#     for item in order_ingredients:
#         if order_ingredients[item] > resources[item]:
#             print(f"​Sorry there is not enough {item}.")
#             return False
#     return True
#
#
# def process_coins():
#     """Returns the total calculated from coins inserted."""
#     print("Please insert coins.")
#     total = int(input("how many quarters?: ")) * 0.25
#     total += int(input("how many dimes?: ")) * 0.1
#     total += int(input("how many nickles?: ")) * 0.05
#     total += int(input("how many pennies?: ")) * 0.01
#     return total
#
#
# def is_transaction_successful(money_received, drink_cost):
#     """Return True when the payment is accepted, or False if money is insufficient."""
#     if money_received >= drink_cost:
#         change = round(money_received - drink_cost, 2)
#         print(f"Here is ${change} in change.")
#         global profit
#         profit += drink_cost
#         return True
#     else:
#         print("Sorry that's not enough money. Money refunded.")
#         return False
#
#
# def make_coffee(drink_name, order_ingredients):
#     """Deduct the required ingredients from the resources."""
#     for item in order_ingredients:
#         resources[item] -= order_ingredients[item]
#     print(f"Here is your {drink_name} ☕️. Enjoy!")
#
#
# is_on = True
#
# while is_on:
#     choice = input("​What would you like? (espresso/latte/cappuccino): ")
#     if choice == "off":
#         is_on = False
#     elif choice == "report":
#         print(f"Water: {resources['water']}ml")
#         print(f"Milk: {resources['milk']}ml")
#         print(f"Coffee: {resources['coffee']}g")
#         print(f"Money: ${profit}")
#     else:
#         drink = MENU[choice]
#         if is_resource_sufficient(drink["ingredients"]):
#             payment = process_coins()
#             if is_transaction_successful(payment, drink["cost"]):
#                 make_coffee(choice, drink["ingredients"])
